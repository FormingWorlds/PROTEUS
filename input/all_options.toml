# PROTEUS configuration file (version 2.0)

# This is a comprehensive outline of all configuration options. It includes variables
# which have default values, in order to showcase the range of potential options available.
# Variable defaults are defined in `src/proteus/config/*.py`

# Root tables should be physical, with the exception of "params"
# Software related options should go within the appropriate physical table

# The general structure is:
#   [root]     metadata
#   [params]   parameters for code execution, output files, time-stepping, convergence
#   [star]     stellar parameters, model selection
#   [orbit]    planetary orbital parameters
#   [struct]   planetary structure (mass, radius)
#   [atmos]    atmosphere parameters, model selection
#   [escape]   escape parameters, model selection
#   [interior] magma ocean model selection and parameters
#   [outgas]   outgassing parameters (fO2) and included volatiles
#   [delivery] initial volatile inventory, and delivery model selection
#   [observe]  synthetic observations

# ----------------------------------------------------
# Metadata
version = "2.0"
author  = "Harrison Nicholls, Tim Lichtenberg, Mariana Sastre"

# ----------------------------------------------------
# Parameters
[params]
    # output files
    [params.out]
        path        = "all_options"
        logging     = "INFO"
        plot_mod    = 3      # Plotting frequency, 0: wait until completion | n: every n iterations | none: do not plot
        plot_fmt    = "png"  # Plotting image file format, "png" or "pdf" recommended
        write_mod   = 1      # Write CSV frequency, 0: wait until completion | n: every n iterations
        archive_mod = 5      # Archive frequency, 0: wait until completion | n: every n iterations | none: do not archive

    # time-stepping
    [params.dt]
        minimum      = 1e4    # absolute minimum time-step [years]
        minimum_rel  = 1e-5   # relative minimum time-step [dimensionless]
        maximum      = 1e7    # yr, maximum time-step
        initial      = 3e1    # yr, inital step size
        starspec     = 1e9    # yr, interval to re-calculate the stellar spectrum
        starinst     = 1e1    # yr, interval to re-calculate the instellation
        method       = "adaptive"  # proportional | adaptive | maximum

        [params.dt.proportional]
            propconst    = 52.0   # Proportionality constant

        [params.dt.adaptive]
            atol         = 0.02   # Step size atol
            rtol         = 0.10   # Step size rtol

    # Termination criteria
    #     Set enabled=true/false in each section to enable/disable that termination criterion
    [params.stop]

        # Require criteria to be satisfied twice before model will exit?
        strict = false

        # required number of iterations
        [params.stop.iters]
            enabled = true
            minimum = 5
            maximum = 9000

        # required time constraints
        [params.stop.time]
            enabled = true
            minimum = 1.0e3     # yr, model will certainly run to t > minimum
            maximum = 4.567e+9     # yr, model will terminate when t > maximum

        # solidification
        [params.stop.solid]
            enabled  = true
            phi_crit = 0.01  # non-dim., model will terminate when global melt fraction < phi_crit

        # radiative equilibrium
        [params.stop.radeqm]
            enabled = true
            atol    = 0.2     # absolute tolerance [W m-2]
            rtol    = 1e-3    # relative tolerance

        [params.stop.escape]
            enabled   = true
            p_stop = 5.0      # Stop surface pressure is less than this value


# ----------------------------------------------------
# Star
[star]

    # Physical parameters
    mass    = 1.0       # stellar mass [M_sun]
    age_ini = 0.100     # model initialisation age [Gyr]

    module  = "mors"
    [star.mors]
        rot_pcntle = 50.0       # rotation percentile
        rot_period = "none"     # rotation period [days]
        tracks  = "spada"       # evolution tracks: spada | baraffe
        age_now = 4.567         # current age of star [Gyr]
        spec    = "stellar_spectra/Named/sun.txt" # path to stellar spectrum file

    [star.dummy]
        radius  = 1.0       # Stellar radius [R_sun]
        Teff    = 5772.0    # Star's brightness temperature [K]

# Orbital system
[orbit]
    semimajoraxis   = 1.0       # AU
    eccentricity    = 0.0       # dimensionless
    zenith_angle    = 48.19     # degrees
    s0_factor       = 0.375     # dimensionless

    module  = "none"

    [orbit.dummy]
        H_tide  = 1e-7  # Fixed tidal power density [W kg-1]
        Phi_tide = "<0.3"   # Tidal heating applied when inequality locally satisfied

    [orbit.lovepy]
        visc_thresh = 1e9   # Minimum viscosity required for heating [Pa s]

# Planetary structure - physics table
[struct]
    mass_tot    = 1.0       # M_earth
    radius_int  = "none"    # R_earth
    corefrac    = 0.55      # non-dim., radius fraction
    core_density = 10738.33      # Core density [kg m-3]
    core_heatcap = 880.0         # Core specific heat capacity [J K-1 kg-1]

    module = "zalmoxis"

    [struct.zalmoxis]
        coremassfrac = 0.325                   # non-dim., core mass fraction
        inner_mantle_mass_fraction = 0         # non-dim., inner mantle mass fraction
        weight_iron_frac = 0.325               # non-dim., iron fraction in the planet
        num_levels = 100                       # number of Zalmoxis radius layers
        EOSchoice = "Tabulated:iron/silicate"  # iron/silicate for super-Earths, water for water planets with Earth-like rocky cores
        max_iterations_outer = 20              # max. iterations for the outer loop
        tolerance_outer = 1e-3                 # tolerance for the outer loop
        max_iterations_inner = 100             # max. iterations for the inner loop
        tolerance_inner = 1e-4                 # tolerance for the inner loop
        relative_tolerance = 1e-5              # relative tolerance for solve_ivp
        absolute_tolerance = 1e-6              # absolute tolerance for solve_ivp
        target_surface_pressure = 101325       # target surface pressure
        pressure_tolerance = 1e11              # tolerance surface pressure
        max_iterations_pressure = 200          # max. iterations for the innermost loop
        pressure_adjustment_factor = 1.1       # factor for adjusting the pressure in the innermost loop

# Atmosphere - physics table
[atmos_clim]
    prevent_warming = true      # do not allow the planet to heat up
    surface_d       = 0.01      # m, conductive skin thickness
    surface_k       = 2.0       # W m-1 K-1, conductive skin thermal conductivity
    cloud_enabled   = false     # enable water cloud radiative effects
    cloud_alpha     = 0.0       # condensate retention fraction (1 -> fully retained)
    surf_state      = "fixed"   # surface scheme: "mixed_layer" | "fixed" | "skin"
    surf_greyalbedo  = 0.1      # surface grey albedo
    albedo_pl       = 0.0   	# Bond albedo (scattering)
    rayleigh        = false      # enable rayleigh scattering
    tmp_minimum     = 0.5           # temperature floor on solver
    tmp_maximum     = 5000.0        # temperature ceiling on solver

    module  = "agni"           # Which atmosphere module to use

    [atmos_clim.agni]
        p_top           = 1.0e-5        # bar, top of atmosphere grid pressure
        spectral_group  = "Honeyside"   # which gas opacities to include
        spectral_bands  = "48"          # how many spectral bands?
        num_levels      = 40            # Number of atmospheric grid levels
        chemistry       = "none"        # "none" | "eq"
        surf_material   = "greybody"    # surface material file for scattering
        solve_energy    = false         # solve for energy-conserving atmosphere profile
        solution_atol   = 1e-3          # solver absolute tolerance
        solution_rtol   = 2e-2          # solver relative tolerance
        overlap_method  = "ee"          # gas overlap method
        condensation    = true          # volatile condensation
        real_gas        = true          # use real-gas equations of state

    [atmos_clim.janus]
        p_top           = 1.0e-6        # bar, top of atmosphere grid pressure
        p_obs           = 1.0e-3        # bar, observed pressure level
        spectral_group  = "Honeyside"   # which gas opacities to include
        spectral_bands  = "48"          # how many spectral bands?
        F_atm_bc        = 0             # measure outgoing flux at: (0) TOA | (1) Surface
        num_levels      = 40           # Number of atmospheric grid levels
        tropopause      = "none"        # none | skin | dynamic
        overlap_method    = "ee"          # gas overlap method

    [atmos_clim.dummy]
        gamma           = 0.01           # atmosphere opacity between 0 and 1

# Volatile escape - physics table
[escape]

    module = "zephyrus"    # Which escape module to use
    reservoir = "outgas"   # Reservoir that sets escaping gas composition

    [escape.zephyrus]
        Pxuv        = 5e-5          # Pressure at which XUV radiation become opaque in the planetary atmosphere [bar]
        efficiency  = 0.1           # Escape efficiency factor
        tidal       = false         # Tidal contribution enabled

    [escape.dummy]
        rate        = 0.0         # Bulk unfractionated escape rate [kg s-1]

# Interior - physics table
[interior]
    grain_size      = 0.1   # crystal settling grain size [m]
    F_initial       = 1e3   # Initial heat flux guess [W m-2]
    radiogenic_heat = false  # enable radiogenic heat production
    tidal_heat      = false  # enable tidal heat production
    rheo_phi_loc    = 0.6    # Centre of rheological transition
    rheo_phi_wid    = 0.2   # Width of rheological transition
    bulk_modulus    = 260e9   # Bulk modulus [Pa]

    module = "spider"   # Which interior module to use

    [interior.spider]
        num_levels      = 150       # Number of SPIDER grid levels
        mixing_length   = 2         # Mixing length parameterization
        tolerance       = 1.0e-8    # absolute solver tolerance
        tolerance_rel   = 1.0e-8    # relative solver tolerance
        solver_type     = "bdf"     # SUNDIALS solver method
        tsurf_atol      = 20.0      # tsurf_poststep_change
        tsurf_rtol      = 0.02      # tsurf_poststep_change_frac
        ini_entropy     = 2900.0    # Surface entropy conditions [J K-1 kg-1]
        ini_dsdr        = -4.698e-6 # Interior entropy gradient [J K-1 kg-1 m-1]

    [interior.aragog]
        num_levels                      = 50       # Number of Aragog grid levels
        tolerance                       = 1.0e-7   # solver tolerance
        ini_tmagma                      = 3300.0   # Initial magma surface temperature [K]
        inner_boundary_condition        = 1        # 1 = core cooling model, 2 = prescribed heat flux, 3 = prescribed temperature
        inner_boundary_value            = 4000     # core temperature [K], if inner_boundary_condition = 3. CMB heat flux [W/m^2], if if inner_boundary_condition = 2
        conduction                      = true     # enable conductive heat transfer
        convection                      = true     # enable convective heat transfer
        gravitational_separation        = false    # enable gravitational separation
        mixing                          = false    # enable mixing
        tsurf_poststep_change           = 30       # threshold of maximum change on surface temperature
        event_triggering                = true    # enable events triggering to avoid abrupt jumps in surface temperature

    [interior.dummy]
        ini_tmagma      = 3500.0    # Initial magma surface temperature [K]

# Outgassing - physics table
[outgas]
    fO2_shift_IW    = 4         # log10(ΔIW), atmosphere/interior boundary oxidation state

    module = "calliope"         # Which outgassing module to use

    [outgas.calliope]
        include_H2O  = true     # Include H2O compound
        include_CO2  = true     # Include CO2 compound
        include_N2   = true     # Include N2 compound
        include_S2   = true     # Include S2 compound
        include_SO2  = true     # Include SO2 compound
        include_H2S  = true     # Include H2S compound
        include_NH3  = true     # Include NH3 compound
        include_H2   = true     # Include H2 compound
        include_CH4  = true     # Include CH4 compound
        include_CO   = true     # Include CO compound
        T_floor      = 700.0    # Temperature floor applied to outgassing calculation [K].

    [outgas.atmodeller]
        some_parameter = "some_value"

# Volatile delivery - physics table
[delivery]

    # Radionuclide parameters
    radio_tref = 4.55   # Reference age for concentrations [Gyr]
    radio_K    = 310.0  # ppmw of potassium (all isotopes)
    radio_U    = 0.031  # ppmw of uranium (all isotopes)
    radio_Th   = 0.124  # ppmw of thorium (all isotopes)

    # Which initial inventory to use?
    initial = 'elements'        # "elements" | "volatiles"

    # No module for accretion as of yet
    module = "none"

    # Set initial volatile inventory by planetary element abundances
    [delivery.elements]
        H_oceans    = 5.0       # Hydrogen inventory in units of equivalent Earth oceans
        #H_ppmw      = 109.0     # Hydrogen inventory in ppmw relative to mantle mass

        CH_ratio    = 1.0       # C/H mass ratio in mantle/atmosphere system
        # C_ppmw      = 0.0       # Carbon inventory in ppmw relative to mantle mass

        NH_ratio    = 0.5       # N/H mass ratio in mantle/atmosphere system
        # N_ppmw      = 0.5      # Nitrogen inventory in ppmw relative to mantle mass

        SH_ratio    = 2.0       # S/H mass ratio in mantle/atmosphere system
        # S_ppmw      = 2.0     # Sulfur inventory in ppmw relative to mantle mass

    # Set initial volatile inventory by partial pressures in atmosphere
    [delivery.volatiles]
        H2O  = 20.0          # partial pressure of H2O
        CO2  = 30.0          # partial pressure of CO2
        N2   = 0.0          # etc
        S2   = 0.0
        SO2  = 0.0
        H2S  = 0.0
        NH3  = 0.0
        H2   = 0.0
        CH4  = 0.0
        CO   = 0.0

# Atmospheric chemistry postprocessing
[atmos_chem]

    module  = "vulcan"          # Atmospheric chemistry module
    when    = "manually"        # When to run chemistry (manually, offline, online)

    # Physics flags
    photo_on        = true      # Enable photochemistry
    Kzz_on          = true      # Enable eddy diffusion
    Kzz_const       = "none"    # Constant eddy diffusion coefficient (none => use profile)
    moldiff_on      = true      # Enable molecular diffusion in the atmosphere
    updraft_const   = 0.0       # Set constant updraft velocity

    # Vulcan-specific atmospheric chemistry parameters
    [atmos_chem.vulcan]
        clip_fl = 1e-20     # Floor on stellar spectrum [erg s-1 cm-2 nm-1]
        clip_vmr = 1e-10    # Neglect species with vmr < clip_vmr
        make_funs = true    # Generate reaction network functions
        ini_mix = "profile" # Initial mixing ratios (profile, outgas)
        fix_surf = false    # Fixed surface mixing ratios
        network = "SNCHO"   # Class of chemical network to use (CHO, NCHO, SNCHO)
        save_frames = true  # Plot frames during iterations
        yconv_cri = 0.05    # Convergence criterion, value of mixing ratios
        slope_cri = 0.0001  # Convergence criterion, rate of change of mixing ratios

# Calculate simulated observations
[observe]

    # Module with which to calculate the synthetic observables
    synthesis = "none"
