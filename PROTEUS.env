# Get this file path
if [ -n "$BASH_SOURCE" ]; then
  this_script=$BASH_SOURCE
elif [ -n "$ZSH_VERSION" ]; then
  setopt function_argzero
  this_script=$0
elif eval '[[ -n ${.sh.file} ]]' 2>/dev/null; then
  eval 'this_script=${.sh.file}'
else
  echo 1>&2 "Unsupported shell. Please use bash, ksh93 or zsh."
  exit 2
fi

# Proteus
export COUPLER_DIR="$( dirname "$(readlink -f -- "$this_script")" )"
echo "COUPLER_DIR = $COUPLER_DIR"
export PATH=$COUPLER_DIR:$PATH
export PYTHONPATH=$COUPLER_DIR:$PYTHONPATH


# JANUS
cd "$COUPLER_DIR/JANUS"
source "JANUS.env"
cd "$COUPLER_DIR"

# # SOCRATES
# cd "$COUPLER_DIR/SOCRATES"
# source set_rad_env
# cd "$COUPLER_DIR"

# Spider
export SPIDER_DIR=$COUPLER_DIR/SPIDER
export PETSC_DIR=$COUPLER_DIR/petsc
export PATH=$SPIDER_DIR:$PATH
export PATH=$SPIDER_DIR/py3:$PATH
export PYTHONPATH=$SPIDER_DIR/py3:$PYTHONPATH
export PYTHONPATH=$COUPLER_DIR/sciath:$PYTHONPATH

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    export PETSC_ARCH=arch-linux-c-opt       
elif [[ "$OSTYPE" == "darwin"* ]]; then
    export PETSC_ARCH=arch-darwin-c-opt       
else
    echo "ERROR: Unknown OS type '$OSTYPE' "
fi


# Vulcan
export PYTHONPATH=$COUPLER_DIR/VULCAN:$PYTHONPATH

# Mors
export STELLARMODELS=$COUPLER_DIR/Mors/fs255_grid/


