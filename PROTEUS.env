# Get this file path
if [ -n "$BASH_SOURCE" ]; then
    this_script=$BASH_SOURCE
elif [ -n "$ZSH_VERSION" ]; then
    setopt function_argzero
    this_script=$0
elif eval '[[ -n ${.sh.file} ]]' 2>/dev/null; then
    eval 'this_script=${.sh.file}'
else
    echo 1>&2 "Unsupported shell. Please use bash, ksh93 or zsh."
    exit 2
fi

# Proteus
export PROTEUS_DIR="$( dirname "$(readlink -f -- "$this_script")" )"
echo "PROTEUS_DIR = $PROTEUS_DIR"
export PATH=$PROTEUS_DIR:$PATH
export PYTHONPATH=$PROTEUS_DIR:$PYTHONPATH

# Source SOCRATES if found in SOCRATES directory
SOC_DIR="$PROTEUS_DIR/SOCRATES/"
if [ -d $SOC_DIR ] && [ -f $SOC_DIR/set_rad_env ] ; then
    cd $SOC_DIR
    source set_rad_env
    cd $PROTEUS_DIR
else 
    echo "Did not add SOCRATES to PATH"
fi 


# Spider
export SPIDER_DIR=$PROTEUS_DIR/SPIDER
export PETSC_DIR=$PROTEUS_DIR/petsc
export PATH=$SPIDER_DIR:$PATH
export PATH=$SPIDER_DIR/py3:$PATH
export PYTHONPATH=$SPIDER_DIR/py3:$PYTHONPATH
export PYTHONPATH=$PROTEUS_DIR/sciath:$PYTHONPATH

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    export PETSC_ARCH=arch-linux-c-opt       
elif [[ "$OSTYPE" == "darwin"* ]]; then
    export PETSC_ARCH=arch-darwin-c-opt       
else
    echo "ERROR: Unknown OS type '$OSTYPE' "
fi


# Vulcan
export PYTHONPATH=$PROTEUS_DIR/VULCAN:$PYTHONPATH

